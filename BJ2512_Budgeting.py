# CoTe_BinarySearch(BJ2512)

'''
백준 2512
* 문제: 분배 (최적화)
* 조건
1. 모든 요청이 배정될 수 있는 경우에는 요청 금액을 그대로 배정
2. 모든 요청이 배정될 수 없는 경우, 특정한 정수 상한액을 계산하여
   그 이상인 예산요청에는 모두 상한액을 배정한다. 상한액 이하의 예산요청에 대해서는 요청금액을 그대로 배정한다.

* 입력
1. 첫째 줄에는 지방의 수를 의미하는 정수 N이 주어진다 (3 <= N <= 10,000)
2. 두번 째 줄에는 각 지방의 예상 요청을 표현하는 N개의 정수가 주어짐 (1 <= K <= 10,000)
3. 세번 째 줄에는 총 예산을 나타내는 정수 M이 주어진다 (N <= M <= 1,000,000,000)

* 출력: 예산 중 최대값 정수를 출력

* ex)
예제입력1
4
120 110 140 150
485
예제출력1
127

예제입력2
5
70 80 30 40 100
450
예제출력2
100

* 이분탐색
1. 0 에서 최대요청금액A의 중앙값인 (0+A)/2 를 상한액으로 계산
2. 부족하면 0과 현재 상한액의 중앙값을 상한액으로, 남는다면 현재 상한액과 최대요청금액의 중앙값을  상한액으로.
3. 수정 후 상한액이 수정 전 상한액과 같거나 차이가 없어질 때까지 반복
'''

import sys

N = int(sys.stdin.readline())
K = list(map(int, sys.stdin.readline().split()))
M = int(sys.stdin.readline())

start, end = 0, max(K) # 시작 점, 끝 점

# 이진 탐색
while start <= end:
    mid = (start+end) // 2
    total = 0 # 총 지출 양
    for i in K:
        if i > mid:
            total += mid
        else:
            total += i
    if total <= M: # 지출 양이 예산 보다 작으면
        start = mid + 1
    else: # 지출 양이 예산 보다 크면
        end = mid - 1
print(end)
